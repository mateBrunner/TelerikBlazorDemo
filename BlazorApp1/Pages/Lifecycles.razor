@page "/lifecycles"

@inject BlazorApp1.Data.AppState AppState;


<p>@messageText</p>

<div>
     @if ( isRendered ) {
         <LifecycleInner Title="@titleText">

         </LifecycleInner>
     }
    
</div>

<TelerikButton OnClick="@ChangeParameter">Paraméter változtatás</TelerikButton>


@code {

    string titleText { get; set; } = "Ez a belső component";

    string messageText { get; set; }

    bool isRendered { get; set; } = false;
    private int counter = 0;

    private void ChangeParameter()
    {
        counter++;
        titleText = $"Új title {counter}";
    }

    protected override async Task OnAfterRenderAsync( bool first )
    {
        if ( !first )
            return;

        isRendered = true;

        await base.OnAfterRenderAsync( first );
        StateHasChanged( );

    }

    void AppStateHasChanged( )
    {
        messageText = AppState.CurrentState;
        //a thread kezelés miatt kell itt InvokeAsync-ba tenni
        InvokeAsync( ( ) => StateHasChanged( ) );
    }

    protected override void OnInitialized( )
    {
        AppState.OnChange += AppStateHasChanged;
    }

    public void Dispose( )
    {
        AppState.OnChange -= AppStateHasChanged;
    }

} 
