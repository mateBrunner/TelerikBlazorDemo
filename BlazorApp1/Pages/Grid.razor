@page "/grid"

@using BlazorApp1.Data
@inject CountryService CountryService

<h3>Grid</h3>
<div class="testDiv2">

    @if (Countries == null) {
    <div class="loader-container">
        <TelerikLoader Class="loader-indicator" Type="@LoaderType.InfiniteSpinner" Size="@LoaderSize.Small"></TelerikLoader>
    </div>
    } else {
    <TelerikGrid Data="@Countries" Height="400px" Width="800px"
                 Pageable="false" Sortable="true" Groupable="true"
                 FilterMode="Telerik.Blazor.GridFilterMode.FilterRow"
                 Resizable="true" Reorderable="true">
        <GridColumns>
            <GridColumn Field="@(nameof(Country.Id))" Width="120px" />
            <GridColumn Field="@(nameof(Country.Name))" Title="Name" Groupable="false" />
            <GridColumn Field="@(nameof(Country.ContinentName))" Title="Continent" />
            <GridColumn Field="@(nameof(Country.Population))" Title="Population" />
            <GridColumn Field="@(nameof(Country.Size))" Title="Size" />
        </GridColumns>
    </TelerikGrid>


    }


</div>


@code {

    System.Collections.ObjectModel.ObservableCollection<Country> Countries { get; set; }
    //= new System.Collections.ObjectModel.ObservableCollection<Country>( );
    //LoaderType LoaderType = LoaderType.Pulsing;

    protected override async Task OnAfterRenderAsync( bool first )
    {
        Countries = new System.Collections.ObjectModel.ObservableCollection<Country>( );
        var lista = await CountryService.GetCountries( );
        foreach ( Country country in lista )
            Countries.Add( country );

        await base.OnAfterRenderAsync( first );

        StateHasChanged( );
    }


}
