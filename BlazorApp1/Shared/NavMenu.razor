@using System.Threading
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlazorApp1</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div style="margin: 20px;">
    <TelerikDropDownList Data="@Cultures"
                         Value="@SelectedCulture"
                         Width="100px"
                         ValueChanged="@((string value) => { OnValueChanged(value); })"
                         PopupHeight=""
                         TextField="@nameof(CultureData.Text)"
                         ValueField="@nameof(CultureData.Value)">
    </TelerikDropDownList>
    @*<br />
    Current UI culture (used for localization): @Thread.CurrentThread.CurrentUICulture.Name
    <br />
    Current thread culture (used for date and number formatting): @Thread.CurrentThread.CurrentCulture.Name*@
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="button">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Button
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="textbox">
                <span class="oi oi-list-rich" aria-hidden="true"></span> TextBox
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="combobox">
                <span class="oi oi-list-rich" aria-hidden="true"></span> ComboBox
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="grid">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Grid
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="parentchild">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Parent - child
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="lifecycles">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Lifecycles
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu( )
    {
        collapseNavMenu = !collapseNavMenu;
    }


    #region Lokalizáció
    public class CultureData
    {
        public string Text { get; set; }
        public string Value { get; set; }
    }

    public List<CultureData> Cultures { get; set; } = new List<CultureData>( )
    {
        new  CultureData() { Text = "English", Value = "en-US" },
        new  CultureData() { Text = "Hungarian", Value = "hu-HU" },
        new  CultureData() { Text = "Bulgarian", Value = "bg-BG" },
        new  CultureData() { Text = "German", Value = "de-DE" },
        new  CultureData() { Text = "Spanish", Value = "es-ES" }
    };

    public string SelectedCulture { get; set; } = Thread.CurrentThread.CurrentUICulture.Name;

    public void OnValueChanged( string eventArgs )
    {
        SelectedCulture = eventArgs;

        SetCulture( eventArgs );
    }

    public void SetCulture( string culture )
    {
        var uri = new Uri( NavigationManager.Uri ).GetComponents( UriComponents.PathAndQuery, UriFormat.Unescaped );
        var query = $"?culture={Uri.EscapeDataString( culture )}&redirectUri={Uri.EscapeDataString( uri )}";

        // use a path that matches your culture redirect controller from the previous steps
        NavigationManager.NavigateTo( $"{NavigationManager.BaseUri}Culture/SetCulture{query}", forceLoad: true );
    }
    #endregion

}
